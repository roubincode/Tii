syntax = "proto3";
package ETModel;

/// <summary>
/// MMOServer外网消息
/// </summary>
message EnterMap_C2G // IRequest
{
	int32 RpcId = 90;
	int64 UserId = 1;
	int64 CharaId = 2;
}
message EnterMap_G2C // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 UnitId = 1;
	int32 frame = 2;
}

message CreateUnits_M2C // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	repeated UnitInfo Units = 1;
}

message C2M_SelectTarget // IActorLocationMessage
{
    int32 RpcId = 90;
	int64 ActorId = 93;
	int64 Id = 94;

	int32 targetNetId = 1;
}
message M2C_SelectTarget // IActorMessage
{
	int64 ActorId = 93;
	int64 Id = 94;
	
	int64 unitId = 1;
	int32 targetNetId = 2;
}
message M2C_CreateSprites // IActorMessage
{
	int64 ActorId = 93;
	int64 Id = 94;
	
	repeated SpriteInfo SpriteInfos = 1;
}
message SpriteInfo
{
	string Class = 1;
	string Name = 2;
	string Type = 3;
	Vector3Info Position = 4;
	float Rotation = 5;
	int32 MapId = 6;
	int32 TaskId = 7;
	int32 BattleState = 8;
	int64 PickingsId = 9;
	int32 netId = 10;
}

message C2M_Input_Move // IActorLocationMessage
{
    int32 RpcId = 90;
	int64 ActorId = 93;
	int64 Id = 94;

	int64 unitId = 1;
	int32 frame = 2;
	StateInfo state = 3;
	Vector3Info movePosition = 4; 
	float yRotation =5;
	float jumpLeg = 6;
}
message M2C_Result_Move // IActorMessage
{
	int64 ActorId = 93;
	int64 Id = 94;
	
	int64 unitId = 1;
	int32 frame = 2;
	StateInfo state = 3;
	Vector3Info movePosition = 4; 
	float yRotation =5;
	float jumpLeg = 6;
}

message C2M_Input_UseSkill // IActorLocationMessage
{
    int32 RpcId = 90;
	int64 ActorId = 93;
	int64 Id = 94;
	
	int64 unitId = 1;
	int64 targetId = 2;
	int32 frame = 3; 
	int32 skillId = 4;
	Vector3Info direction = 5;
}
message M2C_Result_UseSkill // IActorMessage
{
	int64 ActorId = 93;
	int64 Id = 94;
	
	int64 unitId = 1;
	int32 skillId = 2;
	int64 targetId = 3;
	int32 frame = 4; 
	bool success = 5;
}
message M2C_StartSkill // IActorMessage
{
	int64 ActorId = 93;
	int64 Id = 94;
	
	int64 unitId = 1;
	int32 skillId = 2;
	int64 targetId = 3;
	int32 frame = 4; 
	Vector3Info direction = 5;
	string state = 6;
}
message M2C_FinishSkill // IActorMessage
{
	int64 ActorId = 93;
	int64 Id = 94;
	
	int64 unitId = 1;
	int32 frame = 2; 
	int32 skillId = 3;
	int32 damage = 4;
	string state = 5;
}

message Vector3Info
{
    float X = 1;
	float Y = 2;
	float Z = 3;
}

enum StateInfo {
	IDLE = 0;
	RUNNING = 1;
	AIRBORNE = 2;
	SWIMMING = 3;
	MOUNTED = 4;
	MOUNTED_AIRBORNE = 5;
	MOUNTED_SWIMMING = 6;
	DEAD = 7;
}

//获取大厅玩家信息请求
message GetUserInfo_InLobby_C2G // IRequest
{
	int32 RpcId = 90;
	int64 UserID = 1;
}
message GetUserInfo_InLobby_G2C // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string NickName = 1;
	int32 Wins = 2;
	int32 Loses = 3;
	int64 Money = 4;
}

//----ET
message Actor_Test // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	string Info = 1;
}

message C2M_TestRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	string request = 1;
}

message M2C_TestResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string response = 1;
}

message Actor_TransferRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 MapIndex = 1;
}

message Actor_TransferResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message C2G_EnterMap // IRequest
{
	int32 RpcId = 90;
}

message G2C_EnterMap // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 UnitId = 1;
	repeated UnitInfo Units = 2;
}

message UnitInfo
{
	int64 UnitId  = 1;
	int64 UserId = 2;
	int64 CharaId = 3;
	float X = 4;
	float Y = 5;
	float Z = 6;
}

message M2C_CreateUnits // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
    repeated UnitInfo Units = 1;
}

message Frame_ClickMap // IActorLocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 Id = 94;
	
	float X = 1;
	float Y = 2;
	float Z = 3;
}

message State_ClickMap // IActorLocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 Id = 94;
	
	float X = 1;
	float Y = 2;
	float Z = 3;
}

message M2C_PathfindingResult // IActorMessage
{
	int64 ActorId = 93;
	
	int64 Id = 1;

	float X = 2;
	float Y = 3;
	float Z = 4;
	
	repeated float Xs = 5;
	repeated float Ys = 6;
	repeated float Zs = 7;
}


message C2R_Ping // IRequest
{
	int32 RpcId = 90;
}

message R2C_Ping // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message G2C_Test // IMessage
{
}

message C2M_Reload // IRequest
{
	int32 RpcId = 90;
	string Account = 1;
	string Password = 2;
}

message M2C_Reload // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}